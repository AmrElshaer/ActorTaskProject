services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - monitoring

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=1Secure*Password1
    ports:
      - "5433:1433"
    networks:
      - monitoring
    volumes:
      - sqlserverdata:/var/opt/mssql

  service_a:
    image: service_a
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8000:8080"
    build:
      context: .
      dockerfile: ServiceA/Dockerfile
    restart: on-failure
    depends_on:
      - db
      - rabbitmq
    networks:
      - monitoring

  service_b:
    image: service_b
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "9000:8080"
    build:
      context: .
      dockerfile: ServiceB/Dockerfile
    restart: on-failure
    depends_on:
      - db
      - rabbitmq
    networks:
      - monitoring
    volumes:
      - ./FileStorage:/app/FileStorage
  client_api:
    image: client_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "7000:8080"
    build:
      context: .
      dockerfile: Client.API/Dockerfile
    restart: on-failure
    depends_on:
      - db
      - rabbitmq
    networks:
      - monitoring
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-actor-task
    ports:
      - 5673:5672
      - 15673:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq:/var/lib/rabbitmq  # Use a volume to store the data
    networks:
      - monitoring
networks:
  monitoring:
    driver: bridge

volumes:
  sqlserverdata:   # âœ… Added missing volume
  rabbitmq:
    driver: local
